=============================================================

API/Util_Vars.php variables details and their default values

=============================================================

----- the autolinker JS file to use because some server configurations may have issues with the
minimized version.  options are "min" or "src"
$VARS_JS_AUTOLINK_FILE = "min" ;

----- the directory to write files and to fetch new chat responses and temp storing of chat transcript before saving
it to the database.  this can be set to a ramdisk location to increase performance
$CONF["CHAT_IO_DIR"] = "$CONF[CONF_ROOT]/chat_sessions" ;

----- directory where the automatic chat invite indicator file are created.  also the directory where "is typing"
indicator files are created.  this can be set to a ramdisk location to increase performance
$CONF["TYPE_IO_DIR"] = "$CONF[CONF_ROOT]/chat_initiate" ;

----- (1,0) - display page processing time (1) in various footer areas
$VAR_DEBUG_OUT = 0 ;

----- (1,0) - display PHP errors (1) or hide errors (0)
the PHP Live! system has its own error catching method for some situations.  for others situations, 0 will result in a
blank page rather then displaying the PHP error on the page
$VARS_E_ALL = 0 ;

----- (1,0) - patch process is sped up (1) or by slower interval.  some servers may complain of very fast DB upates
or thottle situations.  as safe measure, 0 by default
$FAST_PATCH = 0 ;

----- (string) - value for the chat icon image "alt=" and "title=" value
$VARS_ADA_TXT = "" ;

----- (seconds) - every x seconds the visitor and the operator chat window pings the server for new chat requests/responses
$VARS_JS_REQUESTING = 3 ;

----- (seconds) - every x seconds while the visitor is viewing a page, the system pings the server to update visitor
footprint status
$VARS_JS_FOOTPRINT_CHECK = 60 ;

----- (seconds) - every x seconds while the visitor is viewing a page, the system pings the server to process the operator
initiated chats.  also effects fetching of real-time chat icon online/offline status
$VARS_JS_CHATICON_CHECK = 25 ;

----- (cycle) - while the visitor is viewing a page, after max x cycles, all periodic ping to the server will be stopped
to save on server resources.  most likely the browser is open and idle.  one cycle is $VARS_JS_FOOTPRINT_CHECK
$VARS_JS_FOOTPRINT_MAX_CYCLE = 45 ;

----- (seconds) - every x seconds, the operator console will ping the server to process latest chat transcript rating
and to fetch the total/overall number of chats accepted
$VARS_JS_RATING_FETCH = 25 ;

----- (seconds) - inactive visitors greater then x seconds (did not send a ping response to the server) will be automatically
cleared from the system for the most current real-time traffic monitor report
$VARS_FOOTPRINT_U_EXPIRE = $VARS_JS_FOOTPRINT_CHECK * 3 ;

----- (days) - inactive visitor ip data greater then x days will be cleared from the IP table.  the IP table stores the
visitor's total chat requests/footprints/initiated chat/IP address/automatic chat invite values
$VARS_IP_LOG_EXPIRE = 14 ;

----- (days) - inactive visitor data greater then x days will be cleared from the footprint and refer URL tables
$VARS_FOOTPRINT_STATS_EXPIRE = 14 ;

----- (seconds) - operator console will wait x seconds while sending a ping to the server.  if x seconds is reached, the operator
console will automatically disconnect and try to reconnect.  it's a measure of internet connectivity as well
$VARS_JS_OP_CONSOLE_TIMEOUT = 35 ;

----- (cycle mod) - ( n % x ) - every x'th cycle, the system will update the visitor's chat status to remain active status
$VARS_CYCLE_VUPDATE = 10 ;

----- (seconds) - if the last automatic cleaning was less then time()-x, the system attempt an automatic cleaning process
$VARS_CYCLE_CLEAN = $VARS_JS_REQUESTING + 6 ;

----- (seconds) - operators inactive for max x seconds will automatically be switched to offline status.
(every $VARS_JS_REQUESTING seconds the operator status is refreshed to remain active status)
$VARS_EXPIRED_OPS = $VARS_CYCLE_CLEAN * 10 ;

----- (seconds) - chat requests that are inactive for x seconds (server did not receive ping request from the chat windows)
will be automatically cleared (IMPORTANT: this value must be greater 1800 because the chat routing duration can be 5 minutes per route)
$VARS_EXPIRED_REQS = 1800 ;

----- (seconds) - active chat sessions that are inactive for x seconds (server did not receive ping request from the chat windows) will be automatically cleared
$VARS_EXPIRED_ACTIVE_REQS = 300 ;

----- (seconds) - operator to operator requests that has been inactive for x seconds (server did not receive ping request from the chat windows) will be automatically cleared
$VARS_EXPIRED_OP2OP = $VARS_EXPIRED_REQS ;

----- (minutes) - after x minutes waiting in queue on the same page, automatically route the visitor to the leave a message.  if the visitor nativates to a different page, the timer starts again from zero because the visitor is actively browsing the website
$VARS_EXPIRED_QUEUE_IDLE = 45 ;

----- (seconds) - additional seconds added to the visitor chat session updated status for mobile devices for situations
of carrier signal lag or visitor places browser in background for a short while checking website or other activity
$VARS_MOBILE_CHAT_BUFFER = 300 ;

----- (minutes) - after the visitor sends an offline email message, wait x minutes before the visitor can send another offline message
$VARS_MAIL_SEND_BUFFER = .25 ; // .25 = 15 seconds since system uses minutes (60*$VARS_MAIL_SEND_BUFFER)

----- (number) - max number of active visitor embed chat sessions before the system recycles the session files.  keep in
mind, x number of new chat response temp files are created per chat session
$VARS_MAX_EMBED_SESSIONS = 3 ;

----- (pixel) - width of the popup chat window
$VARS_CHAT_WIDTH = 540 ;

----- (pixel) - height of the popup chat window
$VARS_CHAT_HEIGHT = 580 ;

----- (pixel) - width of the embed chat window
(there is embed window shadow image behind the embed chat window that is static.  so this should not be modified)
(shadow image - themes/initiate/widget_shadow.png)
$VARS_CHAT_WIDTH_WIDGET = 415 ;

----- (pixel) - height of the embed chat window
(there is embed window shadow image behind the embed chat window that is static.  so this should not be modified)
(shadow image - themes/initiate/widget_shadow.png)
$VARS_CHAT_HEIGHT_WIDGET = 600 ;

----- (pixel) - padding left/right of the embed chat window
$VARS_CHAT_PADDING_WIDGET = 20 ;

----- (pixel) - padding bottom of the embed chat window
$VARS_CHAT_PADDING_WIDGET_BOTTOM = 20 ;

----- (pixel) - rounded corner radius of the embed chat window
$VARS_CHAT_PADDING_WIDGET_RADIUS = 10 ;

----- (defined/not defined) - process the mysql free results. (should be off for most systems, "on" (1) only if mysql free result error displays on the pages)
$VARS_MYSQL_FREE_RESULTS = 0 ;

----- (hash array) - DMARC domains workaround to send email
(replace the sender "From" to the department email address)
(this method is only used if PHP function "dns_get_record" does not exist)
$DMARC_DOMAINS = Array( "yahoo.com" => 1, "another_domain.com" => 1 )

----- (bytes) - maximum size of a chat session data file to limit excessive data or possible flooding
$VARS_MAX_CHAT_FILESIZE = 5000000 ;

----- (minutes) - minutes the Setup Admin is idle before automatic logout when attempting to perform various actions after being idle
$VARS_SETUP_IDLE_LOGOUT = 30 ;

----- (number) - maximum number of most recent message board messages stored in the database before automatic delete of expired messages
$VARS_MAX_MBOARD_MESSAGES = 500000

----- (seconds) - the refresh rate of the Setup Admin > Reports > Active Chats page
$VARS_REFRESH_ACTIVE_CHATS = 25

----- (seconds) - the refresh rate of the operator console traffic monitor
$VARS_REFRESH_TRAFFIC_MONITOR = 60

----- (seconds) - the refresh rate of the Setup Admin > Operators > Operator Status Monitor popup page
$VARS_REFRESH_OP_MONITOR = 25

----- (seconds) - maximum number of departments when creating department groups
$VARS_MAX_DEPT_GROUP_DEPTS = 5